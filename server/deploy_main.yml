name: üöÄ Deploy Odoo to EC2 (Incremental with Rollback)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # L·∫•y to√†n b·ªô l·ªãch s·ª≠ ƒë·ªÉ c√≥ th·ªÉ rollback

      - name: üîê Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: üìã L·∫•y danh s√°ch file thay ƒë·ªïi trong th∆∞ m·ª•c server/
        id: diff
        run: |
          echo "CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^server/' || true)" >> $GITHUB_OUTPUT
          echo "PREVIOUS_COMMIT=${{ github.event.before }}" >> $GITHUB_OUTPUT

      - name: üíæ T·∫°o backup t·ªëi ∆∞u tr∆∞·ªõc khi deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          echo "üíæ T·∫°o backup t·ªëi ∆∞u c·ªßa version hi·ªán t·∫°i..."
          
          # T·∫°o th∆∞ m·ª•c backup v·ªõi timestamp ng·∫Øn g·ªçn
          BACKUP_DIR="~/odoo_backup/$(date +%m%d_%H%M)_$(echo ${{ github.sha }} | cut -c1-7)"
          mkdir -p "$BACKUP_DIR"
          
          # Ch·ªâ backup nh·ªØng files quan tr·ªçng, b·ªè qua files kh√¥ng c·∫ßn thi·∫øt
          if [ -d /home/ec2-user/odoo_deploy ]; then
            cd /home/ec2-user/odoo_deploy
            
            # T·∫°o danh s√°ch files c·∫ßn backup (lo·∫°i tr·ª´ files l·ªõn kh√¥ng c·∫ßn thi·∫øt)
            find . -type f \
              ! -path "*/node_modules/*" \
              ! -path "*/.git/*" \
              ! -path "*/logs/*" \
              ! -path "*/tmp/*" \
              ! -path "*/__pycache__/*" \
              ! -name "*.pyc" \
              ! -name "*.pyo" \
              ! -name "*.log" \
              ! -name "*.tmp" \
              ! -name "*.swp" \
              -size -10M \
              | tar czf "$BACKUP_DIR/odoo_backup.tar.gz" -T -
            
            # L∆∞u metadata nh·ªè g·ªçn
            echo "${{ github.event.before }}" > "$BACKUP_DIR/commit.txt"
            echo "$(date)" > "$BACKUP_DIR/date.txt"
            du -sh "$BACKUP_DIR" > "$BACKUP_DIR/size.txt"
          fi
          
          # Qu·∫£n l√Ω backup th√¥ng minh: Gi·ªØ 3 backup g·∫ßn nh·∫•t + 2 backup h√†ng tu·∫ßn
          cd /home/ec2-user/odoo_backup
          
          # Gi·ªØ 3 backup g·∫ßn nh·∫•t
          RECENT_BACKUPS=$(ls -t | head -n 3)
          
          # Gi·ªØ 2 backup c≈© nh·∫•t m·ªói tu·∫ßn (backup ƒë·∫ßu ti√™n c·ªßa tu·∫ßn)
          WEEKLY_BACKUPS=$(ls -t | awk 'NR > 3' | head -n 14 | awk 'NR % 7 == 1' | head -n 2)
          
          # T·∫°o danh s√°ch backup c·∫ßn gi·ªØ l·∫°i
          KEEP_BACKUPS=$(echo -e "$RECENT_BACKUPS\n$WEEKLY_BACKUPS" | sort -u)
          
          # X√≥a c√°c backup kh√¥ng c·∫ßn thi·∫øt
          for backup in $(ls -t); do
            if ! echo "$KEEP_BACKUPS" | grep -q "^$backup$"; then
              echo "üóëÔ∏è X√≥a backup c≈©: $backup"
              rm -rf "$backup"
            fi
          done
          
          echo "‚úÖ Backup ho√†n t·∫•t. K√≠ch th∆∞·ªõc: $(du -sh $BACKUP_DIR | cut -f1)"
          echo "üìä T·ªïng dung l∆∞·ª£ng backup: $(du -sh /home/ec2-user/odoo_backup | cut -f1)"
          EOF

      - name: üìÇ Copy file thay ƒë·ªïi l√™n EC2
        id: copy_files
        if: steps.diff.outputs.CHANGED != ''
        run: |
          echo "${{ steps.diff.outputs.CHANGED }}" | tr ' ' '\n' > changed_files.txt
          cat changed_files.txt
          
          while IFS= read -r file; do
            echo "üì§ Copying $file"
            rsync -avz -e "ssh -o StrictHostKeyChecking=no" "$file" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/ec2-user/odoo_deploy/"${file#server/}"
          done < changed_files.txt

      - name: üöÄ Deploy v√† ki·ªÉm tra
        id: deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          
          echo "üìÇ Di chuy·ªÉn v√†o th∆∞ m·ª•c d·ª± √°n"
          cd /home/ec2-user/odoo_deploy
          
          echo "üîß Ph√¢n quy·ªÅn script"
          chmod +x restart-odoo.sh
          
          echo "üöÄ Kh·ªüi ƒë·ªông l·∫°i Odoo"
          ./restart-odoo.sh
          
          echo "üìú Xem log kh·ªüi ƒë·ªông Odoo"
          docker logs --tail=50 odoo_app || echo "‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c docker logs"
          docker exec odoo_app tail -n 20 /var/log/odoo/odoo.log || echo "‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c log trong container"
          
          echo "‚è≥ ƒê·ª£i Odoo ho·∫°t ƒë·ªông..."
          ODOO_READY=false
          
          for i in {1..12}; do
            if curl -k -sSf https://52.221.232.143:8069 > /dev/null 2>&1 || \
               curl -k -sSf https://mekong-odoo.ddns.net:8069 > /dev/null 2>&1; then
              echo "‚úÖ Odoo is running!"
              ODOO_READY=true
              break
            else
              echo "‚è∞ Waiting for Odoo to start... ($i/12)"
              sleep 10
            fi
          done
          
          if [ "$ODOO_READY" = false ]; then
            echo "‚ùå Odoo kh√¥ng ph·∫£n h·ªìi sau 2 ph√∫t!"
            exit 1
          fi
          
          # Ki·ªÉm tra th√™m c√°c l·ªói trong log
          echo "üîç Ki·ªÉm tra l·ªói trong log..."
          ERROR_COUNT=$(docker exec odoo_app grep -i "error\|exception\|traceback" /var/log/odoo/odoo.log | tail -20 | wc -l || echo "0")
          
          if [ "$ERROR_COUNT" -gt 5 ]; then
            echo "‚ö†Ô∏è Ph√°t hi·ªán nhi·ªÅu l·ªói trong log Odoo"
            docker exec odoo_app tail -30 /var/log/odoo/odoo.log
            exit 1
          fi
          
          echo "üéâ Deploy th√†nh c√¥ng!"
          EOF

      - name: üîÑ Rollback khi deploy th·∫•t b·∫°i
        if: failure() && steps.deploy.outcome == 'failure'
        run: |
          echo "üí• Deploy th·∫•t b·∫°i! B·∫Øt ƒë·∫ßu rollback..."
          
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          
          echo "üîÑ Th·ª±c hi·ªán rollback..."
          
          # T√¨m backup g·∫ßn nh·∫•t
          LATEST_BACKUP=$(ls -t ~/odoo_backup/ | head -n 1)
          
          if [ -z "$LATEST_BACKUP" ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y backup ƒë·ªÉ rollback!"
            exit 1
          fi
          
          echo "üìÅ Rollback t·ª´ backup: $LATEST_BACKUP"
          
          # Backup version b·ªã l·ªói ƒë·ªÉ debug sau
          FAILED_DIR="~/odoo_backup/failed_$(date +%Y%m%d_%H%M%S)"
          mkdir -p "$FAILED_DIR"
          cp -r ~/odoo_deploy/* "$FAILED_DIR/" 2>/dev/null || true
          
          # Restore t·ª´ backup (gi·∫£i n√©n n·∫øu l√† file n√©n)
          rm -rf ~/odoo_deploy/*
          if [ -f ~/odoo_backup/"$LATEST_BACKUP"/odoo_backup.tar.gz ]; then
            cd ~/odoo_deploy
            tar xzf ~/odoo_backup/"$LATEST_BACKUP"/odoo_backup.tar.gz
          else
            cp -r ~/odoo_backup/"$LATEST_BACKUP"/* ~/odoo_deploy/
          fi
          
          echo "üîß Ph√¢n quy·ªÅn script sau rollback"
          cd ~/odoo_deploy
          chmod +x restart-odoo.sh
          
          echo "üöÄ Kh·ªüi ƒë·ªông l·∫°i Odoo v·ªõi version c≈©"
          ./restart-odoo.sh
          
          echo "‚è≥ Ki·ªÉm tra Odoo sau rollback..."
          for i in {1..10}; do
            if curl -k -sSf https://52.221.232.143:8069 > /dev/null 2>&1 || \
               curl -k -sSf https://mekong-odoo.ddns.net:8069 > /dev/null 2>&1; then
              echo "‚úÖ Rollback th√†nh c√¥ng! Odoo ƒë√£ ho·∫°t ƒë·ªông tr·ªü l·∫°i"
              break
            else
              echo "‚è∞ ƒêang ki·ªÉm tra sau rollback... ($i/10)"
              sleep 10
            fi
          done
          
          if [ $i -eq 10 ]; then
            echo "‚ùå Rollback th·∫•t b·∫°i! C·∫ßn can thi·ªáp th·ªß c√¥ng"
            exit 1
          fi
          
          EOF

      - name: üìß G·ª≠i email th√¥ng b√°o k·∫øt qu·∫£
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: ${{ job.status == 'success' && 'üéâ DEPLOY SUCCESS' || (steps.deploy.outcome == 'failure' && 'üîÑ DEPLOY FAILED - ROLLBACK COMPLETED' || 'üí• DEPLOY FAILED') }} - Odoo
          to: ${{ secrets.USER_DEPLOY_NOTIFY }}
          from: "Odoo Deploy Bot <${{ secrets.SMTP_USERNAME }}>"
          body: |
            Xin ch√†o,
            
            Deploy Status: ${{ job.status == 'success' && 'TH√ÄNH C√îNG üéâ' || 'TH·∫§T B·∫†I ‚ùå' }}
            ${{ steps.deploy.outcome == 'failure' && 'Rollback Status: HO√ÄN T·∫§T ‚úÖ' || '' }}
            
            Branch: main
            Commit: ${{ github.sha }}
            ${{ steps.deploy.outcome == 'failure' && format('Previous Commit (Rollback): {0}', github.event.before) || '' }}
            T√°c gi·∫£: ${{ github.event.pusher.name }}
            
            Ki·ªÉm tra h·ªá th·ªëng Odoo t·∫°i:
            üîó https://52.221.232.143:8069
            üîó https://mekong-odoo.ddns.net:8069
            
            ${{ job.status != 'success' && '‚ö†Ô∏è L∆∞u √Ω: N·∫øu c√≥ v·∫•n ƒë·ªÅ, vui l√≤ng ki·ªÉm tra log tr√™n server ho·∫∑c th·ª±c hi·ªán rollback th·ªß c√¥ng.' || '' }}
            
            Tr√¢n tr·ªçng,
            Deploy Bot